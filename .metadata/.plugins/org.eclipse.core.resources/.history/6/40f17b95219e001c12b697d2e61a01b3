package com.customer.service.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.customer.service.dto.CardInfo;
import com.customer.service.service.CircuitBreakerService;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/v1/customer")
@RequiredArgsConstructor
public class CircuitBreakerController {

	private final Long customerId = 1905l;
	private final CircuitBreakerService circuitBreakerService;

	@GetMapping(value = "/card-info/circuit-breaker")
	@CircuitBreaker(name = "orderService", fallbackMethod = "orderFallback")
	public ResponseEntity<?> getCustomerCardInfo() throws InterruptedException {

		CardInfo cInfo = circuitBreakerService.getCardInfo(customerId, Thread.currentThread().getName());
		return new ResponseEntity<CardInfo>(cInfo, org.springframework.http.HttpStatus.OK);

	}

	public ResponseEntity<?> orderFallback(Exception e) {

		return new ResponseEntity<CardInfo>(
				CardInfo.builder().cardId(1l).customerId(1l).cardName("CircuitBreaker Default Card!").build(),
				org.springframework.http.HttpStatus.OK);

	}
}

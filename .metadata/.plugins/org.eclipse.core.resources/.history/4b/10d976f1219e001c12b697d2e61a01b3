package com.customer.service.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.customer.service.dto.CardInfo;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/v1/customer")
@RequiredArgsConstructor
public class CircuitBreakerController {

	@Autowired
    private RestTemplate restTemplate;
	
	@GetMapping(value = "/card-info/circuit-breaker")
	@CircuitBreaker(name = "orderService", fallbackMethod = "orderFallback")
	public ResponseEntity<?> getCustomerCardInfo() throws InterruptedException {
		
		CardInfo cInfo = restTemplate.getForEntity("http://localhost:7000/api/v1/card/circuit-breaker/1905", CardInfo.class);

		return new ResponseEntity<CardInfo>(cInfo, org.springframework.http.HttpStatus.OK);

	}

	public ResponseEntity<?> orderFallback(Exception e) {

		return new ResponseEntity<CardInfo>(
				CardInfo.builder().cardId(1l).customerId(1l).cardName("CircuitBreaker Default Card!").build(),
				org.springframework.http.HttpStatus.OK);

	}
}
